#include <stdio.h>
#include "cpuinfo.h"
?
#define test_feature(r, x)??????? \
????printf("has "#x" : %s\n", (r & CPU_HAS_##x) ? "true" : "false")
?
int main(int argc, char **argv)
{
int i;
????char *type, vender[12];
?
????cpu_info_t cpu;
?
????if (cpuinfo(0, &cpu))
????{
????????for (i = 0; i < 4; ++i)
????????{
????????????vender[i]???? = (char)(cpu.ebx >> (i * 8));
????????????vender[4 + i] = (char)(cpu.edx >> (i * 8));
????????????vender[8 + i] = (char)(cpu.ecx >> (i * 8));
????????}
????????vender[12] = (char)0;
????????printf("vender : %s\n", vender);
????}
?
????if (cpuinfo(1, &cpu))
????{
????????switch (cpu.eax & 0x3000)
????????{
????????case 0:
????????????type = "Original OEM Processor";
????????????break;
????????case 1:
????????????type = "Intel OverDrive Processor";
????????????break;
????????case 2:
????????????type = "Dual Processor (not applicable to Intel486 Processors)";
????????????break;
????????case 3:
????????????type = "Intel reserved";
????????????break;
????????default:
????????????type = "Unkown";
????????????break;
????????}
????????printf("type?? : %s\n\n", type);
?
????????test_feature(cpu.edx, SSE);
????????test_feature(cpu.edx, SSE2);
????????test_feature(cpu.ecx, SSE3);
????????test_feature(cpu.ecx, DCA);
????????test_feature(cpu.ecx, PCID);
????????test_feature(cpu.edx, MMX);
????????test_feature(cpu.edx, FPU);
????}
?
????return 0;
}
